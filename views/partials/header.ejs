<!DOCTYPE html>
<html lang="en" data-bs-theme="light">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css">

    <link rel="stylesheet" type="text/css" href="/styles/styles.css">
    <title>Document</title>
    
</head>
<body>
    <div class ="bg-info">
    <div class="container-md">
        <div class="d-flex flex-wrap align-items-center justify-content-center justify-content-lg-start">



          <a href="/" class="d-flex align-items-center mb-2 mb-lg-0 text-white text-decoration-none">
            <!----------------------------------logo ---------------------------------------------->
            <svg width="300" height="100" viewBox="0 0 300 100" xmlns="http://www.w3.org/2000/svg">
                <!-- Background Circle -->
                <circle cx="50" cy="50" r="40" fill="#4a90e2" />
                
                <!-- Blog Icon -->
                <path d="M70 40 L70 60 L90 60 L90 40 Z" fill="#ffffff"/>
                <path d="M70 40 L90 50 L70 60 Z" fill="#ffffff"/>
                
                <!-- Blog Text -->
                <text x="120" y="60" font-family="Verdana, sans-serif" font-size="32" fill="#333">Eliad's blog</text>
                
                <!-- Decorative Lines -->
                <line x1="120" y1="70" x2="250" y2="70" stroke="#4a90e2" stroke-width="2"/>
                <line x1="120" y1="75" x2="250" y2="75" stroke="#4a90e2" stroke-width="1"/>
                
                <!-- Tagline Text -->
                <text x="110" y="90" font-family="Verdana, sans-serif" font-size="14" fill="#333">Your Daily Dose of Insights</text>
              </svg>
              <!----------------------------------end ---------------------------------------------->
          </a>
  



          <ul class="nav col-12 col-lg-auto me-lg-auto mb-2 justify-content-center mb-md-0">
            <li>
                <a href="/" class="nav-link px-5 nav-item-style <%= activePage === '' ? 'active' : '' %>">Home</a>
            </li>
            <li>
                <a href="/about" class="nav-link px-5 nav-item-style <%= activePage === 'about' ? 'active' : '' %>">About</a>
            </li>
            <li>
                <a href="/create" class="nav-link px-5 nav-item-style <%= activePage === 'create' ? 'active' : '' %>">Create a new post</a>
            </li>
        </ul>
        
        

        <form id="searchForm" class="col-12 col-lg-auto mb-3 mb-lg-0 me-lg-3" autocomplete="off">
          <div class="autocomplete" style="width:300px;">
            <input id="searcher" type="search" class="form-control form-control-dark text-bg-light" placeholder="Search..." aria-label="Search">
          </div>
        </form>



          <div class="text-end">
          </div>
        </div>
      </div>
    </div>


    <script>
      document.getElementById('searchForm').addEventListener('submit', function(event) {
        event.preventDefault(); // Prevent the default form submission
    
        // Get the value from the input field
        const searchTerm = document.getElementById('searcher').value.trim();
        
        // Redirect to the new URL
        if (searchTerm) {
          // Redirect to /blog/<searchTerm>
          window.location.href = '/blog/' + encodeURIComponent(searchTerm);
        }
      });
      
    </script>
    

<div id="data-container" data-files='<%= JSON.stringify(locals.files_name) %>'></div>
<script>

document.getElementById('searchForm').addEventListener('submit', function(event) {
  event.preventDefault(); // Prevent the default form submission

  // Get the value from the input field
  const searchTerm = document.getElementById('searcher').value.trim();
  
  // Redirect to the new URL
  if (searchTerm) {
    window.location.href = '/blog/' + encodeURIComponent(searchTerm);
  }
});

function autocomplete(inp, arr) {
  var currentFocus;
  var itemSelected = false; // Flag to track if an item is selected

  inp.addEventListener("input", function(e) {
    var a, b, i, val = this.value;
    closeAllLists();
    if (!val) { return false; }
    currentFocus = -1;
    a = document.createElement("DIV");
    a.setAttribute("id", this.id + "autocomplete-list");
    a.setAttribute("class", "autocomplete-items");
    this.parentNode.appendChild(a);
    for (i = 0; i < arr.length; i++) {
      if (arr[i].substr(0, val.length).toUpperCase() == val.toUpperCase()) {
        b = document.createElement("DIV");
        b.innerHTML = "<strong>" + arr[i].substr(0, val.length) + "</strong>";
        b.innerHTML += arr[i].substr(val.length);
        b.innerHTML += "<input type='hidden' value='" + arr[i] + "'>";
        b.addEventListener("click", function(e) {
          inp.value = this.getElementsByTagName("input")[0].value;
          itemSelected = true; // Set the flag when an item is selected
          closeAllLists();
          // Submit the form when an item is clicked
          document.getElementById('searchForm').dispatchEvent(new Event('submit'));
        });
        a.appendChild(b);
      }
    }
  });

  inp.addEventListener("keydown", function(e) {
    var x = document.getElementById(this.id + "autocomplete-list");
    if (x) x = x.getElementsByTagName("div");
    if (e.keyCode == 40) {
      currentFocus++;
      addActive(x);
    } else if (e.keyCode == 38) {
      currentFocus--;
      addActive(x);
    } else if (e.keyCode == 13) {
      e.preventDefault(); // Prevent default form submission
      if (currentFocus > -1) {
        if (x) x[currentFocus].click();
        itemSelected = true; // Ensure the flag is set if an item is clicked
      } else {
        // Submit the form if no item is selected
        itemSelected = false;
        document.getElementById('searchForm').dispatchEvent(new Event('submit'));
      }
    }
  });

  function addActive(x) {
    if (!x) return false;
    removeActive(x);
    if (currentFocus >= x.length) currentFocus = 0;
    if (currentFocus < 0) currentFocus = (x.length - 1);
    x[currentFocus].classList.add("autocomplete-active");
  }

  function removeActive(x) {
    for (var i = 0; i < x.length; i++) {
      x[i].classList.remove("autocomplete-active");
    }
  }

  function closeAllLists(elmnt) {
    var x = document.getElementsByClassName("autocomplete-items");
    for (var i = 0; i < x.length; i++) {
      if (elmnt != x[i] && elmnt != inp) {
        x[i].parentNode.removeChild(x[i]);
      }
    }
  }

  document.addEventListener("click", function(e) {
    closeAllLists(e.target);
  });
}
document.addEventListener('DOMContentLoaded', function() {
    // Retrieve the JSON data from the data attribute
    var dataContainer = document.getElementById('data-container');
    var filesNameList = JSON.parse(dataContainer.getAttribute('data-files'));

    // Verify the data
    autocomplete(document.getElementById("searcher"), filesNameList);
  });


</script>
